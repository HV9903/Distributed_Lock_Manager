// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/lock.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	mi := &file_proto_lock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{0}
}

func (x *InitRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *InitRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type InitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ReturnCode    int32                  `protobuf:"varint,2,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	mi := &file_proto_lock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{1}
}

func (x *InitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InitResponse) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

type LockAcquireRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName      string                 `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	RequestId     string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockAcquireRequest) Reset() {
	*x = LockAcquireRequest{}
	mi := &file_proto_lock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockAcquireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockAcquireRequest) ProtoMessage() {}

func (x *LockAcquireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockAcquireRequest.ProtoReflect.Descriptor instead.
func (*LockAcquireRequest) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{2}
}

func (x *LockAcquireRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockAcquireRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

func (x *LockAcquireRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type LockAcquireResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReturnCode    int32                  `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	FencingToken  int64                  `protobuf:"varint,3,opt,name=fencing_token,json=fencingToken,proto3" json:"fencing_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockAcquireResponse) Reset() {
	*x = LockAcquireResponse{}
	mi := &file_proto_lock_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockAcquireResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockAcquireResponse) ProtoMessage() {}

func (x *LockAcquireResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockAcquireResponse.ProtoReflect.Descriptor instead.
func (*LockAcquireResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{3}
}

func (x *LockAcquireResponse) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *LockAcquireResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LockAcquireResponse) GetFencingToken() int64 {
	if x != nil {
		return x.FencingToken
	}
	return 0
}

type LockReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName      string                 `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	RequestId     string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	FencingToken  int64                  `protobuf:"varint,4,opt,name=fencing_token,json=fencingToken,proto3" json:"fencing_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockReleaseRequest) Reset() {
	*x = LockReleaseRequest{}
	mi := &file_proto_lock_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockReleaseRequest) ProtoMessage() {}

func (x *LockReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockReleaseRequest.ProtoReflect.Descriptor instead.
func (*LockReleaseRequest) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{4}
}

func (x *LockReleaseRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockReleaseRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

func (x *LockReleaseRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *LockReleaseRequest) GetFencingToken() int64 {
	if x != nil {
		return x.FencingToken
	}
	return 0
}

type LockReleaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReturnCode    int32                  `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockReleaseResponse) Reset() {
	*x = LockReleaseResponse{}
	mi := &file_proto_lock_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockReleaseResponse) ProtoMessage() {}

func (x *LockReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockReleaseResponse.ProtoReflect.Descriptor instead.
func (*LockReleaseResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{5}
}

func (x *LockReleaseResponse) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *LockReleaseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AppendFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	FileName      string                 `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestId     string                 `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	FencingToken  int64                  `protobuf:"varint,5,opt,name=fencing_token,json=fencingToken,proto3" json:"fencing_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendFileRequest) Reset() {
	*x = AppendFileRequest{}
	mi := &file_proto_lock_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendFileRequest) ProtoMessage() {}

func (x *AppendFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendFileRequest.ProtoReflect.Descriptor instead.
func (*AppendFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{6}
}

func (x *AppendFileRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AppendFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *AppendFileRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *AppendFileRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AppendFileRequest) GetFencingToken() int64 {
	if x != nil {
		return x.FencingToken
	}
	return 0
}

type AppendFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReturnCode    int32                  `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendFileResponse) Reset() {
	*x = AppendFileResponse{}
	mi := &file_proto_lock_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendFileResponse) ProtoMessage() {}

func (x *AppendFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendFileResponse.ProtoReflect.Descriptor instead.
func (*AppendFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{7}
}

func (x *AppendFileResponse) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *AppendFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CloseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	mi := &file_proto_lock_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{8}
}

func (x *CloseRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CloseRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CloseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ReturnCode    int32                  `protobuf:"varint,2,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	mi := &file_proto_lock_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{9}
}

func (x *CloseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CloseResponse) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

var File_proto_lock_proto protoreflect.FileDescriptor

const file_proto_lock_proto_rawDesc = "" +
	"\n" +
	"\x10proto/lock.proto\x12\vlockservice\"I\n" +
	"\vInitRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\"I\n" +
	"\fInitResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1f\n" +
	"\vreturn_code\x18\x02 \x01(\x05R\n" +
	"returnCode\"m\n" +
	"\x12LockAcquireRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1b\n" +
	"\tlock_name\x18\x02 \x01(\tR\blockName\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId\"u\n" +
	"\x13LockAcquireResponse\x12\x1f\n" +
	"\vreturn_code\x18\x01 \x01(\x05R\n" +
	"returnCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\rfencing_token\x18\x03 \x01(\x03R\ffencingToken\"\x92\x01\n" +
	"\x12LockReleaseRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1b\n" +
	"\tlock_name\x18\x02 \x01(\tR\blockName\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId\x12#\n" +
	"\rfencing_token\x18\x04 \x01(\x03R\ffencingToken\"P\n" +
	"\x13LockReleaseResponse\x12\x1f\n" +
	"\vreturn_code\x18\x01 \x01(\x05R\n" +
	"returnCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xa5\x01\n" +
	"\x11AppendFileRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1b\n" +
	"\tfile_name\x18\x02 \x01(\tR\bfileName\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\x12\x1d\n" +
	"\n" +
	"request_id\x18\x04 \x01(\tR\trequestId\x12#\n" +
	"\rfencing_token\x18\x05 \x01(\x03R\ffencingToken\"O\n" +
	"\x12AppendFileResponse\x12\x1f\n" +
	"\vreturn_code\x18\x01 \x01(\x05R\n" +
	"returnCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"J\n" +
	"\fCloseRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\"J\n" +
	"\rCloseResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1f\n" +
	"\vreturn_code\x18\x02 \x01(\x05R\n" +
	"returnCode2\x87\x03\n" +
	"\vLockService\x12=\n" +
	"\x04Init\x12\x18.lockservice.InitRequest\x1a\x19.lockservice.InitResponse\"\x00\x12R\n" +
	"\vLockAcquire\x12\x1f.lockservice.LockAcquireRequest\x1a .lockservice.LockAcquireResponse\"\x00\x12R\n" +
	"\vLockRelease\x12\x1f.lockservice.LockReleaseRequest\x1a .lockservice.LockReleaseResponse\"\x00\x12O\n" +
	"\n" +
	"AppendFile\x12\x1e.lockservice.AppendFileRequest\x1a\x1f.lockservice.AppendFileResponse\"\x00\x12@\n" +
	"\x05Close\x12\x19.lockservice.CloseRequest\x1a\x1a.lockservice.CloseResponse\"\x00B\tZ\a./protob\x06proto3"

var (
	file_proto_lock_proto_rawDescOnce sync.Once
	file_proto_lock_proto_rawDescData []byte
)

func file_proto_lock_proto_rawDescGZIP() []byte {
	file_proto_lock_proto_rawDescOnce.Do(func() {
		file_proto_lock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_lock_proto_rawDesc), len(file_proto_lock_proto_rawDesc)))
	})
	return file_proto_lock_proto_rawDescData
}

var file_proto_lock_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_lock_proto_goTypes = []any{
	(*InitRequest)(nil),         // 0: lockservice.InitRequest
	(*InitResponse)(nil),        // 1: lockservice.InitResponse
	(*LockAcquireRequest)(nil),  // 2: lockservice.LockAcquireRequest
	(*LockAcquireResponse)(nil), // 3: lockservice.LockAcquireResponse
	(*LockReleaseRequest)(nil),  // 4: lockservice.LockReleaseRequest
	(*LockReleaseResponse)(nil), // 5: lockservice.LockReleaseResponse
	(*AppendFileRequest)(nil),   // 6: lockservice.AppendFileRequest
	(*AppendFileResponse)(nil),  // 7: lockservice.AppendFileResponse
	(*CloseRequest)(nil),        // 8: lockservice.CloseRequest
	(*CloseResponse)(nil),       // 9: lockservice.CloseResponse
}
var file_proto_lock_proto_depIdxs = []int32{
	0, // 0: lockservice.LockService.Init:input_type -> lockservice.InitRequest
	2, // 1: lockservice.LockService.LockAcquire:input_type -> lockservice.LockAcquireRequest
	4, // 2: lockservice.LockService.LockRelease:input_type -> lockservice.LockReleaseRequest
	6, // 3: lockservice.LockService.AppendFile:input_type -> lockservice.AppendFileRequest
	8, // 4: lockservice.LockService.Close:input_type -> lockservice.CloseRequest
	1, // 5: lockservice.LockService.Init:output_type -> lockservice.InitResponse
	3, // 6: lockservice.LockService.LockAcquire:output_type -> lockservice.LockAcquireResponse
	5, // 7: lockservice.LockService.LockRelease:output_type -> lockservice.LockReleaseResponse
	7, // 8: lockservice.LockService.AppendFile:output_type -> lockservice.AppendFileResponse
	9, // 9: lockservice.LockService.Close:output_type -> lockservice.CloseResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_lock_proto_init() }
func file_proto_lock_proto_init() {
	if File_proto_lock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_lock_proto_rawDesc), len(file_proto_lock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_lock_proto_goTypes,
		DependencyIndexes: file_proto_lock_proto_depIdxs,
		MessageInfos:      file_proto_lock_proto_msgTypes,
	}.Build()
	File_proto_lock_proto = out.File
	file_proto_lock_proto_goTypes = nil
	file_proto_lock_proto_depIdxs = nil
}
